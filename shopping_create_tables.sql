CREATE DATABASE IF NOT EXISTS shopper;
USE shopper;
DROP TABLE IF EXISTS shopping;
DROP TABLE IF EXISTS log;
DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS places;
DROP TABLE IF EXISTS groceries;
DROP TABLE IF EXISTS stuff;
DROP TABLE IF EXISTS transport;
DROP TABLE IF EXISTS party;
DROP TABLE IF EXISTS health;

CREATE TABLE IF NOT EXISTS health (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(100) NOT NULL,
type text DEFAULT NULL
);
CREATE TABLE IF NOT EXISTS party (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
type VARCHAR(30) NOT NULL,
participants text DEFAULT NULL
);
CREATE TABLE IF NOT EXISTS transport (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
type VARCHAR(100) NOT NULL,
place VARCHAR(30) DEFAULT NULL
);
CREATE TABLE IF NOT EXISTS stuff (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(100) NOT NULL,
unit VARCHAR(30) DEFAULT NULL,
owned INT DEFAULT 0,
needed INT DEFAULT 0
);
CREATE TABLE IF NOT EXISTS groceries (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(100) NOT NULL,
unit VARCHAR(30) DEFAULT NULL,
owned INT DEFAULT 0,
needed INT DEFAULT 0
);
CREATE TABLE IF NOT EXISTS places (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(30) NOT NULL,
address text NOT NULL
);
CREATE TABLE IF NOT EXISTS categories (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(30) NOT NULL
);
CREATE TABLE IF NOT EXISTS log (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
date date DEFAULT CURDATE(),
place INT,
time INT,
comment TEXT DEFAULT NULL,
FOREIGN KEY (place) REFERENCES places(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS shopping (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
purchase_id INT NOT NULL,
groceries_id INT DEFAULT NULL,
stuff_id INT DEFAULT NULL,
party_id INT DEFAULT NULL,
transport_id INT DEFAULT NULL,
health_id INT DEFAULT NULL,
price INT,
comment TEXT DEFAULT NULL,
FOREIGN KEY (purchase_id) REFERENCES log(id) ON DELETE CASCADE,
FOREIGN KEY (groceries_id) REFERENCES groceries(id) ON DELETE CASCADE,
FOREIGN KEY (stuff_id) REFERENCES stuff(id) ON DELETE CASCADE,
FOREIGN KEY (party_id) REFERENCES party(id) ON DELETE CASCADE,
FOREIGN KEY (transport_id) REFERENCES transport(id) ON DELETE CASCADE,
FOREIGN KEY (health_id) REFERENCES health(id) ON DELETE CASCADE
);